# https://monitoring.mixins.dev/cert-manager/
apiVersion: "monitoring.coreos.com/v1"
kind: "PrometheusRule"
metadata:
  name: "cert-manager-rules"
  namespace: "monitoring"
  labels:
    release: "prom-operator"
spec:
  groups:
    - name: "cert-manager.rules"
      rules:
        - alert: "CertManagerAbsent"
          expr: 'absent(up{job="cert-manager"})'
          for: "10m"
          labels:
            severity: "critical"
          annotations:
            summary: "Cert Manager has disappeared from Prometheus service discovery."
            description: "New certificates will not be able to be minted, and existing ones can't be renewed until cert-manager is back."
            runbook_url: "https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerabsent"

        - alert: "CertManagerCertExpirySoon"
          expr: 'avg by(namespace, namespace, name) (certmanager_certificate_expiration_timestamp_seconds - time()) < (21 * 24 * 3600)'
          for: "1h"
          labels:
            severity: "warning"
          annotations:
            summary: "The cert {{ $labels.name }} is {{ $value | humanizeDuration }} from expiry, it should have renewed over a week ago."
            description: |
              The domain that this cert covers will be unavailable after {{ $value | humanizeDuration }}.
              Clients using endpoints that this cert protects will start to fail in {{ $value | humanizeDuration }}.
            runbook_url: "https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertexpirysoon"

        - alert: "CertManagerCertNotReady"
          expr: 'max by(name, namespace, namespace, condition) (certmanager_certificate_ready_status{condition!="True"} == 1)'
          for: "10m"
          labels:
            severity: "critical"
          annotations:
            summary: "The cert {{ $labels.name }} is not ready to serve traffic."
            description: |
              This certificate has not been ready to serve traffic for at least
              10m. If the cert is being renewed or there is another valid cert, the ingress
              controller _may_ be able to serve that instead.
            runbook_url: "https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagercertnotready"

        - alert: "CertManagerHittingRateLimits"
          expr: 'sum by(host) (rate(certmanager_http_acme_client_request_count{status="429"}[5m])) > 0'
          for: "5m"
          labels:
            severity: "critical"
          annotations:
            summary: "Cert manager hitting LetsEncrypt rate limits."
            description: "Depending on the rate limit, cert-manager may be unable to generate certificates for up to a week."
            runbook_url: "https://github.com/imusmanmalik/cert-manager-mixin/blob/main/RUNBOOK.md#certmanagerhittingratelimits"
